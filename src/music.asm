;/*-------------------------------------------------------------------------------------------*/
;
; a small music program
;
;/*-------------------------------------------------------------------------------------------*/


data  segment           ;数据定义段
    assume  ds:data     ;建立数据段寄存器寻址
    msg_1   db '<<---Welcome you to this OS.--->> $',0dh,0ah
    msg_2   db 0dh,0ah,'In this OS. you can press below keys to enjoy:$'
    msg_3   db 0dh,0ah,'Super Low: q-w-e-r-t-y-u$'
    msg_4   db 0dh,0ah,'      Low: a-s-d-f-g-h-j$'
    msg_5   db 0dh,0ah,'      Mid: z-x-c-v-b-n-m$'
    msg_6   db 0dh,0ah,'      Hig: 1-2-3-4-5-6-7$'
    msg_7   db 0dh,0ah,'Anytime you can press ''Esc'' or ''Enter'' to exit.$'
    msg_8   db 0dh,0ah,'What''s more, you can press ''p'' to play music!$'
    msg_9   db 0dh,0ah,'Please select the music(press ''q'' to exit the main menu):$'
    msg_10  db 0dh,0ah,'1. Huaxin$'
    msg_11  db 0dh,0ah,'2. Jingle bells$'
    msg_12  db 0dh,0ah,'3. Happy birthday to you$'
    msg_13  db 0dh,0ah,'4. Happy new year$'
    msg_21  db 0dh,0ah,' $'
    note_t  dw 131,147,165,175,196,220,247              ;重低音
            dw 262,294,330,349,392,440,494              ;低音
            dw 523,587,659,698,784,880,988              ;中音
            dw 1046,1175,1318,1397,1568,1760,1975       ;高音
            dw 0                                        ;休止符0
;              '1','2','3','4','5','6','7'              ;从低到高
    key_t   db 'q','w','e','r','t','y','u'              ;重低音
            db 'a','s','d','f','g','h','j'              ;低音
            db 'z','x','c','v','b','n','m'              ;中音
            db '1','2','3','4','5','6','7'              ;高音
            db '0'                                      ;休止符0
    ;画心
    music_n1 db    'b','c','c','x','z','x','x','b','c'
            db    '0','b','c','c','x','z','x','b','n'
            db    'c','0','b','c','c','x','z','x','z','j'
            db    'z','x','j','g','h','d','g'
            db    'h','h','c','x','z','j','j','g','h'
            db    'g','g','h','h','z','j','h','g'
            db    's','d','d','d','g','h','h','j','z','g'
            db    'z','x','x','c','c','b','c','c','x','z','x'
            db    'z','j','z','x','j','g','h','d','g'
            db    'h','h','c','x','z','j','g','h','h','0'
            db    'd','d','g','h','h','z','j','h','g','h'
            db    'h','d','d','d','g','h','h','j','z','g','z'
            db    'x','x','c','c','b','c','c','x','z'
            db    'x','z','j','z','x','j','g','h','d','g','h'
            db    'h','c','x','z','j','g','h','h','b','c'
            db    'c','x','z','x','x','b','c','c','c','b','c'
            db    'c','x','z','x','b','n','x','c','c'
            db    'b','c','c','x','z','x','z','j'
            db    'z','x','j','g','h','d','g','h','h','c'
            db    'x','z','j','g','h','h',0

    music_d1 db    4,  4,  8,  4,  4,  8,  4,  4, 16
            db    8,  4,  4,  8,  4,  4,  8,  4,  4
            db   16,  8,  4,  4,  8,  4,  4,  8,  4,  4
            db    4,  4,  4,  4,  8,  4,  4
            db    8,  4,  4,  4,  4,  8,  8,  4
            db    4,  4,  8,  4,  4,  4,  4,  8
            db    4,  2, 16,  4,  4,  8,  4,  4,  4,  4
            db    4,  4,  4,  4,  8,  4,  4,  8,  4,  4,  8
            db    4,  4,  4,  4,  4,  4,  8,  4,  4
            db    8,  4,  4,  4,  4,  8,  4,  2,  8,  8
            db    4,  4,  4,  8,  4,  4,  4,  4,  4,  4
            db    4,  4,  8,  4,  4,  8,  4,  4,  4,  4,  4
            db    4,  4,  4, 16,  4,  4,  8,  4,  4
            db    8,  4,  4,  4,  4,  4,  4,  8,  4,  4,  8
            db    4,  4,  4,  4,  8,  4,  4, 16,  4,  4
            db    8,  4,  4,  8,  4,  4,  4,  4,  8,  4,  4
            db    8,  4,  4,  8,  4,  4,  4,  4,  8
            db    4,  4,  8,  4,  4,  8,  4,  4
            db    4,  4,  4,  4,  8,  4,  4,  8,  4,  4
            db    4,  4,  8,  4,  4, 32

    ;铃儿响叮当+生日快乐+新年好
    music_n2 db    'g','c','x','z','g','0','g','h','g','c','x','z'    ;铃儿响叮当
            db    'h','0','h','a','h','v','c','x','j','g','b','b','v','x','c','z'
            db    'g','c','x','z','g','0','g','h','g','c','x','z','h','v','c','x'
            db    'b','b','b','b','n','b','v','x','z'
            db    'c','c','c','c','c','c','c','b','z','x','c'
            db    'v','v','v','v','c','c','c','x','x','z','x','b'
            db    'c','c','c','c','c','c','c','b','z','x','c'
            db    'v','v','v','v','c','c','b','b','v','x','z','0'
            db    'g','g','h','g','z','j'        ;生日快乐
            db    'g','g','h','g','x','z'
            db    'g','g','b','c','z','j','h'
            db    'v','v','c','z','x','z','0'
            db    'z','z','z','g','c','c','c','z','z','c','b','b','v','c','x','x','c' ;新年好
            db    'v','v','c','x','c','z','z','c','x','g','j','x','z',0

    music_d2 db    4,  4,  4,  4,  8,  4,  2,  2,  4,  4,  4,  4
            db    8,  4,  2,  2,  4,  4,  4,  4,  8,  8,  4,  4,  4,  4,  8,  4
            db    4,  4,  4,  4,  8,  4,  2,  2,  4,  4,  4,  4,  4,  4,  4,  4
            db    4,  4,  4,  4,  4,  4,  4,  4, 16
            db    4,  4,  8,  4,  4,  8,  4,  4,  4,  2, 16
            db    4,  4,  8,  4,  4,  8,  4,  4,  4,  4,  8,  8
            db    4,  4,  8,  4,  4,  8,  4,  4,  4,  2, 16
            db    4,  4,  8,  4,  4,  8,  4,  4,  4,  4, 16,32
            db    4,  4,  8,  8,  8, 16
            db    4,  4,  8,  8,  8, 16
            db    4,  4,  8,  8,  8,  8,  8
            db    4,  4,  8,  8,  8, 16, 32
            db    4,  4,  8,  8,  4,  4,  8,  8,  4,  4,  8,  8,  4,  4, 16,  4,  4
            db    8,  8,  4,  4,  8,  8,  4,  4,  8,  8,  4,  4, 32

    jiepai   db    ?  ;节拍变量定义
    speed    db  2  ;播放速度控制
    jiange   db  1  ;音符间隔停顿时间
data ends    ;数据定义段结束
;/*-------------------------------------------------------------------------------------------*/


;/*-------------------------------------------------------------------------------------------*/
;代码段定义
code    segment    ;代码定义段
        assume  cs:code  ;建立代码段寄存器寻址
;/*-------------------------------------------------------------------------------------------*/


;/*-------------------------------------------------------------------------------------------*/
;字符显示
show macro str   ;宏定义,输入参数：字符串str
    lea   dx,str  ;装入str的有效地址
    mov   ah,09h  ;调用中断21,09h显示字符串
    int   21h
    endm     ;宏定义结束
;/*-------------------------------------------------------------------------------------------*/


;/*-------------------------------------------------------------------------------------------*/
;主函数
main proc  far   ;主函数过程定义
    mov   ax,data  ;取数据段地址
    mov   ds,ax  ;装载数据段寄存器ds,使之指向当前数据段
    show  msg_21
    show  msg_1  ;调用宏,显示字符串
    show  msg_2
    show  msg_3
    show  msg_4
    show  msg_5
    show  msg_6
    show  msg_7
    show  msg_8
    show  msg_21
    mov  bx,0       ;设定查表数组下标初值
;/*-------------------------------------------------------------------------------------------*/


;/*-------------------------------------------------------------------------------------------*/
;按键扫描
key_scan:
    mov  al,6
    mov  jiepai,al              ;初始化节拍
    mov  bx,0000h               ;初始化指针
    mov  ah, 00h                ;利用bios的16号中断，扫描键盘按键
    int   16h                   ;AL中返回按键的ASCII码
    cmp   al, 0dh               ;判断是否为Enter键
    jz   exit                   ;是回车键就退出
    cmp   al, 1bh               ;判断是否为Esc键
    jz   exit                   ;是退出键就退出
    cmp   al, 'p'               ;判断是否为p键
    jz   play                   ;是p键就play music
lookup:
    cmp   key_t[bx],al          ;取出对应频率值
    je   next
    inc   bx                    ;指针+1
    jmp   lookup
next:
    shl   bx,1  ;指针×2,计算频率表指针
    mov  cx,note_t[bx];取得对应数组下标值的频率值
    call   beep  ;调用固定频率子程序
    jmp   key_scan ;否则继续扫描
;/*-------------------------------------------------------------------------------------------*/


;/*-------------------------------------------------------------------------------------------*/
exit:       ;退出
    mov   ah,4ch  ;调用中断21,4ch退出系统
    int   21h
 ;/*-------------------------------------------------------------------------------------------*/


;/*-------------------------------------------------------------------------------------------*/
;音乐播放菜单
play:
    show  msg_9
    show  msg_10
    show  msg_11
    show  msg_12
    show  msg_13
    show  msg_21
input:
    mov  ah, 00h ;利用bios的16号中断，扫描键盘按键
    int   16h  ;AL中返回按键的ASCII码
    cmp   al, 'q'  ;判断是否为Enter键
    jz   start   ;是'q'键就退到主菜单
    cmp   al, '1'  ;判断是否为数字1
    jz   next6  ;是'1'键就播放相对应的歌曲
    cmp   al, '2'  ;判断是否为数字2
    jz   next7  ;是'2'键就播放相对应的歌曲
    jmp   input  ;否则继续扫描按键
next6:
    call   play_m1
next7:
    call   play_m2
start:
    call   main

;/*-------------------------------------------------------------------------------------------*/

;/*-------------------------------------------------------------------------------------------*/ ;音乐播放程序1
play_m1 proc  near
next5:
    mov  bx,0
next3:
    mov  al,music_n1[bx] ;取出music频率值
    push     ax
    mov  al,music_d1[bx] ;取出music节拍
    mov      jiepai,al
    pop      ax
    cmp   al, 0   ;是否为音乐结束标志符
    je   input  ;是则退出play
    push  bx   ;保存bx,bx为music频率指针
    mov  bx,0
look1:
    cmp   key_t[bx],al ;查表取出对应频率值的指针bx
    je   next1  ;找到就beep
    inc   bx   ;指针+1
    and   bx,0ffh
    jmp   look1  ;未找到则继续查找
next1:
    shl   bx,1  ;指针×2,计算频率表指针
    mov  cx,note_t[bx];取得对应数组下标值的频率值
    cmp   cx,0
    je   next4
    call   beep  ;调用固定频率子程序
    call   pause  ;调用停顿时间
    pop   bx   ;获得music指针
    inc   bx   ;继续取得下一个音符
    jmp   next3
next4:
    call   nobeep
    call   pause  ;调用停顿时间
    pop   bx   ;获得music指针

    inc   bx   ;继续取得下一个音符
    jmp   next3
    play_m1  endp
;/*-------------------------------------------------------------------------------------------*/

;/*-------------------------------------------------------------------------------------------*/
;音乐播放程序2
play_m2  proc  near
nex5:
    mov  bx,0
nex3:
    mov  al, music_n2[bx] ;取出music频率值
    push     ax
    mov  al, music_d2[bx] ;取出music节拍
    mov      jiepai,al
    pop      ax
    cmp   al, 0   ;是否为音乐结束标志符
    je   input  ;是则退出play
    push  bx   ;保存bx,bx为music频率指针
    mov  bx,0
loo1:
    cmp   key_t[bx],al ;查表取出对应频率值的指针bx
    je   nex1  ;找到就beep
    inc   bx   ;指针+1
    and   bx,0ffh
    jmp   loo1  ;未找到则继续查找
nex1:
    shl   bx,1  ;指针×2,计算频率表指针
    mov  cx,note_t[bx];取得对应数组下标值的频率值
    cmp   cx,0
    je   nex4
    call   beep  ;调用固定频率子程序
    call   pause  ;调用停顿时间
    pop   bx   ;获得music指针
    inc   bx   ;继续取得下一个音符
    jmp   nex3
nex4:
    call   nobeep
    call   pause  ;调用停顿时间
    pop   bx   ;获得music指针
    inc   bx   ;继续取得下一个音符
    jmp   nex3
play_m2  endp
;/*-------------------------------------------------------------------------------------------*/

;/*-------------------------------------------------------------------------------------------*/
main endp
;主函数过程结束
;/*-------------------------------------------------------------------------------------------*/


 ;/*-------------------------------------------------------------------------------------------*/
 ;固定频率响
 beep    proc  near
    mov  dx,0012h
    mov  ax,34dch
    div   cx   ;ax为所得分频值
    out   42h,al  ;输出频率值,低8位
    mov  al,ah
    out   42h,al  ;输出频率值,高8位
    call   spk_on  ;开启蜂鸣器
    mov  ah,00h  ;取时钟计数值
    int   1ah
    mov  al,jiepai  ;18.2次为1000ms, 2次约为100ms
    add   al,speed
    cbw                  ;al值转为16位ax
    add   ax,dx  ;加上当前时钟计数值,得到计数终值
    mov  bx,ax  ;计数终值置入bx
delay1:
    mov  ah,00h
    int   1ah   ;取时钟计数值
    cmp   bx,dx  ;到终值吗?
    jnz   delay1  ;未到,继续延时
    call   spk_off  ;关闭蜂鸣器
    ret
    beep   endp

;/*-------------------------------------------------------------------------------------------*/

;/*-------------------------------------------------------------------------------------------*/
;休止符延迟时间
nobeep  proc  near
    call   spk_off  ;关闭蜂鸣器

    mov  ah,00h  ;取时钟计数值
    int   1ah
    mov  al,jiepai  ;18.2次为1000ms, 2次约为100ms
    add   al,speed
    cbw                  ;al值转为16位ax
    add   ax,dx  ;加上当前时钟计数值,得到计数终值
    mov  bx,ax  ;计数终值置入bx
delay2:
    mov  ah,00h
    int   1ah   ;取时钟计数值
    cmp   bx,dx  ;到终值吗?
    jnz   delay2  ;未到,继续延时
    ret
    nobeep  endp
;/*-------------------------------------------------------------------------------------------*/
 ;/*-------------------------------------------------------------------------------------------*/
 ;音符间隔停顿时间
 pause   proc  near
    call   spk_off  ;关闭蜂鸣器
    mov  ah,00h  ;取时钟计数值
    int   1ah
    mov  al,jiange  ;18.2次为1000ms, 2次约为100ms
    cbw                  ;al值转为16位ax
    add   ax,dx  ;加上当前时钟计数值,得到计数终值
    mov  bx,ax  ;计数终值置入bx
delay3:
    mov  ah,00h
    int   1ah   ;取时钟计数值
    cmp   bx,dx  ;到终值吗?
    jnz   delay3  ;未到,继续延时
    ret
pause  endp
;/*-------------------------------------------------------------------------------------------*/
;/*-------------------------------------------------------------------------------------------*/ ;开启蜂鸣器
spk_on  proc  near

    push  ax   ;保存ax的值
    in   al,61h  ;获取61h端口的当前值
    or   al,03h  ;把61h端口低二位置1,即打开蜂鸣器
    out   61h,al  ;输出数据到61h端口
    pop   ax   ;恢复ax的值
    ret
spk_on  endp
;/*-------------------------------------------------------------------------------------------*/
;/*-------------------------------------------------------------------------------------------*/ ;关闭蜂鸣器
spk_off  proc  near
    push  ax   ;保存ax的值
    in   al,61h  ;获取61h端口的当前值
    and  al,0fch  ;把61h端口低二位置0,即关闭蜂鸣器
    out  61h,al  ;输出数据到61h端口
    pop  ax   ;恢复ax的值
    ret
spk_off  endp

;/*-------------------------------------------------------------------------------------------*/
 ;/*-------------------------------------------------------------------------------------------*/
 code ends     ;代码段结束
 end  main   ;主程序结束

 ;/*-------------------------------------------------------------------------------------------*/
